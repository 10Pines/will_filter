<%= hidden_field_tag(:mf_id, @model_filter.id) %>
<%= hidden_field_tag(:mf_name, @model_filter.name) %>
<%= hidden_field_tag(:mf_model, @model_filter.model_class_name) %>
<%= hidden_field_tag(:mf_identity_type, @model_filter.identity_type) %>
<%= hidden_field_tag(:mf_identity_id, @model_filter.identity_id) %>

<% if @model_filter.show_save_options? %>
<table class="mf_header">
	<tr>
		<td class='mf_header_presets'>
			<% if @model_filter.saved_filters.size > 0 %>
	      <%= select_tag(:mf_key, options_for_select(@model_filter.saved_filters, @model_filter.key), {:onChange=>"loadPredefinedFilter()"}) %>
			<% end %>
		</td>
		<td class='mf_header_actions'>
		    <%=link_to_function("<span>Save As New...</span>", "saveFilter()", :id => "mf_save_action", :class => "grey-button pcb") %>
        <%=link_to_function("<span>Update</span>", "updateFilter()", :id => "mf_update_action", :class => "grey-button pcb") %>
        <%=link_to_function("<span>Delete</span>", "deleteFilter()", :id => "mf_delete_action", :class => "grey-button pcb") %>
        <% if @model_filter.exportable? %>
          <%=link_to_function("<span>Export Data...</span>", "exportFilter(this)", :id => "mf_export_action", :class => "grey-button pcb") %>
        <% end %>
		</td>
	</tr>
</table>
<% end %>

<div class="mf_match_header">
Match
<%= select_tag(:mf_match, options_for_select(@model_filter.match_options, @model_filter.match), {:onChange=>"markDirty()"}) %>
of the following conditions:<br>
</div>

<% if @model_filter.errors[:filter] %>
	<div style="padding-left:5px; padding-bottom:5px; color:red">
		<%= @model_filter.errors[:filter] %>
	</div>
<% end %>

<table width="100%" style="margin-top:5px; padding:0px;" cellspacing="0px" cellpadding="0px">

<% if @model_filter.size == 0 %>	
<tr>
  <td style="font-style:italic; padding:5px; color: black">
    You haven't added any filter conditions, so all of the results were returned. Use the "Add" button in the bottom left corner to add a new condition or select a predefined filter from a drop-down list above. 
  </td>
</tr>

<% else %>
<% 
		0.upto(@model_filter.size-1) do |index| 
  	 	condition = @model_filter.condition_at(index) 
%>
			<% if @model_filter.errors[index] %>
			<tr>
				<td colspan="2">&nbsp;</td>
				<td colspan="2" class="mf_condition_error">
					<%= @model_filter.errors[index] %>
				</td>
			</tr> 
			<% end %>
			
			<tr>
				<td class="mf_condition">
			    <%= select_tag "mf_c_#{index}", options_for_select(@model_filter.condition_options, condition.key.to_s), {:style=>"width:100%", :onChange=>"performFilterAction('changedConditionAt_#{index}')"} %>
				</td>
				<td class="mf_operator">
			    <%= select_tag "mf_co_#{index}", options_for_select(@model_filter.operator_options_for(condition.key), condition.operator_key.to_s), {:style=>"width:100%", :onChange=>"performFilterAction('update')"} %>
				</td>
				<td class="mf_container">
					<%= condition.container.render_html(index) %>
				</td>
				<td class="mf_condition_actions">
          <%=link_to_function("<span>-</span>", "performFilterAction('removeConditionAt_#{index}')", :class => "grey-button pcb") %>
          <%=link_to_function("<span>+</span>", "performFilterAction('addConditionAfter_#{index}')", :class => "grey-button pcb") %>
				</td>
			</tr>
			
	<% end %>
<% end %>	
	
</table>	
